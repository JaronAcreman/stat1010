[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "STAT 1010 Lecture Notes",
    "section": "",
    "text": "Preface\nThis is a book for STAT 1010: Introduction to Data Science at Auburn University at Montgomery. The book is written using Quarto.\nTo learn more about Quarto books visit https://quarto.org/docs/books."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book for STAT 1010: Introduction to Data Science offered at Auburn University at Montgomery.\nThis an ongoing project and updates are perpetually added."
  },
  {
    "objectID": "python_comp_env.html#use-google-colab",
    "href": "python_comp_env.html#use-google-colab",
    "title": "2  Setting-up Python Computing Environment",
    "section": "2.1 Use Google Colab",
    "text": "2.1 Use Google Colab\nAll you need is a Google account. Sign in your Google account in a browser, and navigate to Google Colab. Google Colab supports both Python and R. Python is the default engine. Change the engine to R in Connect-&gt;change runtime type. Then you are all set. Your file will be saved to your Google Drive or you can choose to send it to your GitHub account (recommended)."
  },
  {
    "objectID": "python_comp_env.html#on-your-own-computer",
    "href": "python_comp_env.html#on-your-own-computer",
    "title": "2  Setting-up Python Computing Environment",
    "section": "2.2 On your own computer",
    "text": "2.2 On your own computer\n\nAnaconda: Download anaconda and install using default installation options\nVSC: Download VSC and install\nstart VSC and install VSC extensions in VSC: Python, Jupyter, intellicode\n(optional) Quarto for authoring: Download Quarto and install\nStart an anaconda terminal. Navigate to the file directory.\nSetup a conda virtual environment: stat1010 and install python and ipykernel engines\nconda create -n stat1010 python ipykernel\nActivate the venv: conda activate stat1010\nstart VSC by typing code . in the anaconda terminal\nopen/create a .ipynb or .py file.\nSelect the kernel stat1010\nRun a code cell by pressing Shift+Enter or click the triangular play button.\nContinue to run other cells.\nAfter finishing using VSC, close the VSC, and deactivate the virtual environment in a conda terminal: conda deactivate"
  },
  {
    "objectID": "r_comp_env.html#setting-up-your-own-computing-environment-on-a-personal-computer",
    "href": "r_comp_env.html#setting-up-your-own-computing-environment-on-a-personal-computer",
    "title": "3  Setting-up R Studio Computing Environment",
    "section": "3.1 Setting up your own computing environment on a personal computer",
    "text": "3.1 Setting up your own computing environment on a personal computer\nThis is the recommended way and the advantage is that it’s easy to handle files.\n\nGo to the website &lt;https://posit.co/download/rstudio-desktop/&gt;.\nFollow the two steps:\n\ndownload and install R: Choose the appropriate operating system, and then choose “base” to “install R for the first time”. You can simply accept all default options.\ndownload Rstudio Desktop and Install it.\n\n\nAfter installation, start R-Studio, and you are ready to use it."
  },
  {
    "objectID": "r_comp_env.html#use-r-studio-cloud-no-setting-up-needed",
    "href": "r_comp_env.html#use-r-studio-cloud-no-setting-up-needed",
    "title": "3  Setting-up R Studio Computing Environment",
    "section": "3.2 Use R-Studio Cloud (No setting-up needed)",
    "text": "3.2 Use R-Studio Cloud (No setting-up needed)\nAlternatively, one can save the hassle of setting up on a personal computer and use the R-Studio Cloud for free. Here are the steps:\n\nGo to the website https://login.rstudio.cloud.\nEither create a new account using an email address such as your AUM email or simply “Log in using Google” or click on other log-in alternative.\n\nAfter log-in to your account, you are ready to use R Studio."
  },
  {
    "objectID": "git.html#download-git",
    "href": "git.html#download-git",
    "title": "4  Use Git and GitHub",
    "section": "4.1 Download Git",
    "text": "4.1 Download Git\n\nGo to the website https://git-scm.com/downloads, select an appropriate operating system, select “Click here to download”\nRun the downloaded setup file with a name such as Git-2.42.0.2-64-bit.exe, and accept all default options."
  },
  {
    "objectID": "git.html#establish-a-connection-between-a-local-repo-and-a-remote-github-repo",
    "href": "git.html#establish-a-connection-between-a-local-repo-and-a-remote-github-repo",
    "title": "4  Use Git and GitHub",
    "section": "4.2 Establish a connection between a local repo and a remote GitHub repo",
    "text": "4.2 Establish a connection between a local repo and a remote GitHub repo\n\n4.2.1 Clone an existing GitHub account\nThis is an easier way to establish a connection between a local repo and a remote repo if the remote repo is created ahead.\n\nSign in to your GitHub account, and create a GitHub repo (such as named homework0) on GitHub (https://github.com), you can add a README.md file or just choose not to add a README.md file.\nOn your local computer, open a Git Bash terminal. In the terminal, type mkdir homework0 (create a folder named homework0 within the current directory and then cd homework0 (enter the directory homework0). The directory name homework0 can be any name you want.\ngit clone https://github.com/YourGitHubUserName/homework0.git (change the remote repo to your remote repo)\nNow you have established a connection between your local directory homework0 and the remote repo homework0 on GitHub.\nCreate a new file in the current local directory homework0 on your local computer, such as using your favorite editor to create a file named myfirstlocalfile.txt with any content in it. Or for the sake of demonstration, you can use the following Linux command to create this file containing the line #My first local file.\necho \"#My first local file\" &gt;&gt; myfirstlocalfile.txt\nIn the terminal, git add . This will add all changes to the staging area.\nNow you are ready to commit the changes, which versions the current files in the directory.\ngit commit -m \"my first commit from local\"\nNow you are ready to sync with the remote repo.\ngit push\nThe GitHub might ask you to sign in for the first time. Choose Sign in with your brower to sign in to complete it.\n\n\n\n4.2.2 Initializing a Git Directory Locally First\nThe previous approach initializes a local Git repo by cloning a remote repo. You can also initializing a local Git repo by using git init. Follow the following steps:\n\nSign in to your GitHub account.\nCreate a GitHub empty repo (such as named homework0) on GitHub (https://github.com) but make sure it is empty (do not add Readme.md file)\nStart a Git Bash Terminal window on your local computer (You could also use the Terminal Window in RStudio or VSC). Navigate to the project directory; if you haven’t yet created a project directory such as homework0, do\nmkdir project_dir Example: mkdir homework0\nUse cd project_directory_name to enter your local project directory;\nUse ls to list all files and directories or use ls -al to include all hidden files and directories. In your local Git Terminal, (note at this moment your local project directory is empty)\necho \"# homework0\" &gt;&gt; README.md  #create a file README.md\ngit init\ngit branch -M main #rename the branch name to main\ngit add .\ngit commit -m \"first commit\"\ngit remote add origin https://github.com/ywanglab/homework0.git #(change the remote to your remote repo)\ngit push -u origin main\nif your local project directory already 1) contains files and 2) had performed init git before, then\ngit remote add origin https://github.com/ywanglab/homework0.git` #(change the remote to your remote repo)\ngit branch -M main\ngit push -u origin main\nin the pop-out GitHub Sign-in window, click on Sign in with your browser."
  },
  {
    "objectID": "git.html#some-other-common-commands",
    "href": "git.html#some-other-common-commands",
    "title": "4  Use Git and GitHub",
    "section": "4.3 Some other common commands",
    "text": "4.3 Some other common commands\n\ncheck git status: git status\ngit add filename or git add .# to add everything\nuse git log to check all commits. Use git log --pretty=oneline for shorter display.\nuse git checkout . to revert back to the previous commit. Any changes after the previous commit will be abandoned.\nto get to a previous commit, use git checkout six_character_commit_ID. To get back to main, use git checkout main.\nTo permanently go back to a previous commit, use\ngit reset –hard six_char_commit_ID\ngit remote -v Get the reminder of the remote repo\nif you want to remove the file only from the remote GitHub repository and not remove it from your local filesystem, use:\n\ngit rm -rf --cached file1.txt # otherwise, remove --cached\ngit commit -m \"remove file1.txt\" \nAnd to push changes to remote repo\ngit push origin main\n\nFor some operating system, such as Mac or Linux, you might be asked to tell GitHub who you are. When you are prompted, type the following two commands in your terminal window:\n\ngit config --global user.name \"Your Name\" \ngit config --global user.mail \"your@email.com\"\nThis will change the Git configuration in a way that anytime you use Git, it will know this information. Note that you need to use the email account that you used to open your GitHub account."
  },
  {
    "objectID": "git.html#when-the-upstream-repo-changes",
    "href": "git.html#when-the-upstream-repo-changes",
    "title": "4  Use Git and GitHub",
    "section": "4.4 When the upstream repo changes",
    "text": "4.4 When the upstream repo changes\nWhen Git tells you the upstream repo is ahead,\n\nDo git pull. Then you can commit and push a new version to the remote repo."
  },
  {
    "objectID": "git.html#create-branch",
    "href": "git.html#create-branch",
    "title": "4  Use Git and GitHub",
    "section": "4.5 Create branch",
    "text": "4.5 Create branch\n\nTo add a branch to the main branch git branch branchname\n\nSwitch the branch git checkout branchname\nAdding a file in branch echo \"#content\" &gt;&gt; filename.txt\nThen add the file and commit the file. To create the branch remotely we have to use\ngit push --set-upstream origin branchname"
  },
  {
    "objectID": "git.html#merge-branch-to-main-branch",
    "href": "git.html#merge-branch-to-main-branch",
    "title": "4  Use Git and GitHub",
    "section": "4.6 Merge branch to main branch",
    "text": "4.6 Merge branch to main branch\nSwitch from a branch (with name such as branchname to the main using\ngit checkout main\non the main branch, Merge command to merge the branches\ngit merge branchname"
  },
  {
    "objectID": "git.html#collaborate-directly-by-cloning-the-authors-github-repo",
    "href": "git.html#collaborate-directly-by-cloning-the-authors-github-repo",
    "title": "4  Use Git and GitHub",
    "section": "4.7 Collaborate directly by cloning the author’s github repo",
    "text": "4.7 Collaborate directly by cloning the author’s github repo\n\ngit clone remote-repo to a local directory\ncreate a new branch: git branch [your_branch_name]\ngit checkout [your_branch_name]\nSubmitting your changes for review\n\nCommit your changes locally. Once you are ready to submit your changes, run these commands in your terminal:\ngit add -A                            # Stages all changes \ngit status                            # Lists all staged changes \ngit commit -m '[your commit message]' # Makes a git commit\nMake a pull request. A GitHub pull request allows a collaborator to review and make comments on your changes. Once approved, the collaborator can merge the changes. Run:\ngit push origin HEAD # Push current branch to the same branch on GitHub\nNow, open the remote GitHub repo that you cloned such as: https://github.com/ywanglab/textbook in your browser. You should see a green button titled “Compare & pull request”. Click that button. Fill out the form on the resulting page with a title and description for your changes. Finally, click the “Create pull request” button."
  },
  {
    "objectID": "git.html#collaborate-by-fork-a-github-repo-and-commit-the-fork-repo-and-create-a-pull-request",
    "href": "git.html#collaborate-by-fork-a-github-repo-and-commit-the-fork-repo-and-create-a-pull-request",
    "title": "4  Use Git and GitHub",
    "section": "4.8 Collaborate by fork a GitHub repo and commit the fork repo and create a pull request",
    "text": "4.8 Collaborate by fork a GitHub repo and commit the fork repo and create a pull request\n\nafter forking a GitHub repo to your own GitHub account, git clone that account to your local repo.\nmake changes to a file, and git add, commit and push the changes to the remote repo in your account.\nThen go to your remote repo on the GitHub site and Create pull request."
  },
  {
    "objectID": "1_lab_markdown.html",
    "href": "1_lab_markdown.html",
    "title": "5  My Jupyter Notebook",
    "section": "",
    "text": "Yi Wang (boldfaced using ** **)\nEducator AUM\nThe following line is italicized using * *\nI am interest in data science because it is a discipline that I feel love with.\n\n5.0.1 Perform addtion\n\n# code block\n1+1\n\n2\n\n\n\n\n5.0.2 Horizontal Rule\nThree or more\nfirst rule using ***\n\nusing dashes —\n\nUsing (underscores) ___\n\n\n\n5.0.3 Bulet list\nusing *\n\nBird\nFrog\nCat\nDog\n\n\n\n5.0.4 Numbered list\nusing 1. item (there is a space between 1. and item)\n\nApple\nPear\nPeach\n\n\n\n5.0.5 Tables\n\n\n\nleft-aligned\ncentered\nright-aligned\n\n\n\n\n1/2/2020\nMary\nApple\n\n\n1/3\nJohnason\nTomato\n\n\n\n\n\n5.0.6 Hyperlinks\nClick here to access my github account.\n\n\n5.0.7 Images\n\n\n\nA computer monitor\n\n\n\n\n5.0.8 Code/Syntax highlighting\ns = \"Python syntax highlighting\"\nprint s\n\n\n5.0.9 Blocked quotes\nusing &gt;\n\nBlockquotes are very handy in email to emulate reply text.\n\n\nThis line is part of the same quote.\n\n\n\n5.0.10 Strikethrough\nusing ~~ before and after a phrase\nstrikethrough this"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "6  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever."
  }
]